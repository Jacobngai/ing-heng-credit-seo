---
/**
 * BaseLayout - Main Layout Component
 * Wraps all pages with SEO, header, footer, and global styles
 */

import type { Locale } from '../utils/i18n';
import SEOHead from '../components/SEOHead.astro';
import Header from '../components/Header.astro';
import Footer from '../components/Footer.astro';
import WhatsAppButton from '../components/WhatsAppButton.astro';
import { generateOrganizationSchema, encodeJSONLD } from '../utils/schema';
import '../styles/global.css';

interface Props {
  title: string;
  description: string;
  lang: Locale;
  canonicalURL?: string;
  image?: string;
  ogType?: 'website' | 'article';
  publishedTime?: string;
  modifiedTime?: string;
  keywords?: string[];
  noIndex?: boolean;
}

const {
  title,
  description,
  lang,
  canonicalURL,
  image,
  ogType = 'website',
  publishedTime,
  modifiedTime,
  keywords = [],
  noIndex = false,
} = Astro.props;

// Get current URL for canonical
const currentUrl = canonicalURL || Astro.url.toString();

// Generate Organization Schema
const organizationSchema = generateOrganizationSchema();
---

<!DOCTYPE html>
<html lang={lang} class="smooth-scroll">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <meta name="generator" content={Astro.generator} />

    <!-- SEO Meta Tags -->
    <SEOHead
      title={title}
      description={description}
      locale={lang}
      canonical={currentUrl}
      ogImage={image}
      ogType={ogType}
      publishedTime={publishedTime}
      modifiedTime={modifiedTime}
      keywords={keywords}
      noIndex={noIndex}
    />

    <!-- Favicon -->
    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
    <link rel="apple-touch-icon" href="/apple-touch-icon.png" />
    <link rel="manifest" href="/manifest.json" />

    <!-- Organization Schema -->
    <script type="application/ld+json" set:html={encodeJSONLD(organizationSchema)} />

    <!-- Preload Critical Assets -->
    <link rel="preconnect" href="https://fonts.googleapis.com" />
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin />

    <!-- Google Fonts (Optional - Add if needed) -->
    <!-- <link href="https://fonts.googleapis.com/css2?family=Inter:wght@400;500;600;700;800&display=swap" rel="stylesheet" /> -->
  </head>

  <body class="antialiased">
    <!-- Skip to main content for accessibility -->
    <a href="#main-content" class="sr-only focus:not-sr-only focus:absolute focus:top-4 focus:left-4 focus:z-50 focus:p-4 focus:bg-primary focus:text-white focus:rounded-lg">
      Skip to main content
    </a>

    <!-- Header -->
    <Header lang={lang} currentPath={Astro.url.pathname} />

    <!-- Main Content -->
    <main id="main-content">
      <slot />
    </main>

    <!-- Footer -->
    <Footer lang={lang} />

    <!-- WhatsApp Floating Button -->
    <WhatsAppButton lang={lang} />

    <!-- Scripts -->
    <script>
      // Mobile menu toggle
      document.addEventListener('DOMContentLoaded', () => {
        const mobileMenuButton = document.getElementById('mobile-menu-button');
        const mobileMenu = document.getElementById('mobile-menu');

        if (mobileMenuButton && mobileMenu) {
          mobileMenuButton.addEventListener('click', () => {
            mobileMenu.classList.toggle('hidden');
            const isExpanded = mobileMenuButton.getAttribute('aria-expanded') === 'true';
            mobileMenuButton.setAttribute('aria-expanded', (!isExpanded).toString());
          });
        }

        // Sticky header on scroll
        const header = document.querySelector('header');
        if (header) {
          window.addEventListener('scroll', () => {
            if (window.scrollY > 100) {
              header.classList.add('shadow-md', 'bg-white/95', 'backdrop-blur-sm');
            } else {
              header.classList.remove('shadow-md', 'bg-white/95', 'backdrop-blur-sm');
            }
          });
        }

        // Close mobile menu when clicking outside
        document.addEventListener('click', (e) => {
          if (mobileMenu && !mobileMenu.contains(e.target as Node) &&
              mobileMenuButton && !mobileMenuButton.contains(e.target as Node)) {
            mobileMenu.classList.add('hidden');
            mobileMenuButton.setAttribute('aria-expanded', 'false');
          }
        });

        // Close mobile menu on ESC key
        document.addEventListener('keydown', (e) => {
          if (e.key === 'Escape' && mobileMenu && !mobileMenu.classList.contains('hidden')) {
            mobileMenu.classList.add('hidden');
            mobileMenuButton?.setAttribute('aria-expanded', 'false');
          }
        });
      });
    </script>
  </body>
</html>
