---
/**
 * Google Analytics 4 Component
 *
 * Purpose: Integrate Google Analytics 4 tracking across the Ing Heng Credit website
 * Features:
 * - GA4 tracking code
 * - Event tracking setup
 * - Cookie consent ready
 * - Production-only loading
 * - Enhanced measurement enabled
 *
 * Usage: Add to <head> in BaseLayout.astro
 * <GoogleAnalytics />
 *
 * Environment Variable Required:
 * PUBLIC_GA_ID=G-XXXXXXXXXX (Add to .env file)
 */

// Get GA4 Measurement ID from environment variable
const GA_ID = import.meta.env.PUBLIC_GA_ID;

// Only load in production to avoid polluting analytics with dev data
const isProduction = import.meta.env.PROD;

// Cookie consent flag (can be controlled by user preferences)
const cookieConsentGiven = true; // TODO: Integrate with cookie consent banner
---

{isProduction && GA_ID && cookieConsentGiven && (
  <>
    <!-- Google Analytics 4 -->
    <script
      async
      type="text/partytown"
      src={`https://www.googletagmanager.com/gtag/js?id=${GA_ID}`}
    ></script>

    <script type="text/partytown" define:vars={{ GA_ID }}>
      window.dataLayer = window.dataLayer || [];
      function gtag() {
        dataLayer.push(arguments);
      }
      gtag('js', new Date());

      // Initialize GA4 with enhanced measurement
      gtag('config', GA_ID, {
        // Enhanced measurement options
        send_page_view: true,
        cookie_flags: 'SameSite=None;Secure',

        // Custom dimensions for multilingual tracking
        custom_map: {
          dimension1: 'language',
          dimension2: 'page_category',
          dimension3: 'equipment_type'
        },

        // Anonymize IP for privacy compliance
        anonymize_ip: true,

        // Cookie settings
        cookie_domain: 'auto',
        cookie_expires: 63072000, // 2 years in seconds
      });

      // Track language on page load
      const currentLang = window.location.pathname.split('/')[1] || 'en';
      gtag('event', 'page_view', {
        language: currentLang,
      });
    </script>

    <!-- Custom Event Tracking -->
    <script is:inline>
      // WhatsApp Button Click Tracking
      document.addEventListener('DOMContentLoaded', function() {
        // Track WhatsApp button clicks
        const whatsappButtons = document.querySelectorAll('a[href*="wa.me"], a[href*="whatsapp"], .whatsapp-button');
        whatsappButtons.forEach(button => {
          button.addEventListener('click', function() {
            if (typeof gtag !== 'undefined') {
              gtag('event', 'whatsapp_click', {
                event_category: 'engagement',
                event_label: 'WhatsApp Contact',
                value: 1
              });
            }
          });
        });

        // Track Phone Number Clicks
        const phoneLinks = document.querySelectorAll('a[href^="tel:"]');
        phoneLinks.forEach(link => {
          link.addEventListener('click', function() {
            if (typeof gtag !== 'undefined') {
              gtag('event', 'phone_call_click', {
                event_category: 'engagement',
                event_label: 'Phone Call',
                phone_number: this.getAttribute('href').replace('tel:', ''),
                value: 1
              });
            }
          });
        });

        // Track Email Clicks
        const emailLinks = document.querySelectorAll('a[href^="mailto:"]');
        emailLinks.forEach(link => {
          link.addEventListener('click', function() {
            if (typeof gtag !== 'undefined') {
              gtag('event', 'email_click', {
                event_category: 'engagement',
                event_label: 'Email Contact',
                value: 1
              });
            }
          });
        });

        // Track Form Submissions
        const forms = document.querySelectorAll('form');
        forms.forEach(form => {
          form.addEventListener('submit', function(e) {
            if (typeof gtag !== 'undefined') {
              const formName = this.getAttribute('name') || this.getAttribute('id') || 'unnamed_form';
              gtag('event', 'form_submission', {
                event_category: 'conversion',
                event_label: formName,
                value: 10
              });
            }
          });
        });

        // Track Equipment Page Views
        if (window.location.pathname.includes('/equipment/')) {
          const equipmentType = window.location.pathname.split('/equipment/')[1]?.split('/')[0];
          if (equipmentType && typeof gtag !== 'undefined') {
            gtag('event', 'equipment_view', {
              event_category: 'engagement',
              event_label: equipmentType,
              equipment_type: equipmentType
            });
          }
        }

        // Track Blog Post Reading Time
        if (window.location.pathname.includes('/blogs/')) {
          let startTime = Date.now();
          let tracked30s = false;
          let tracked60s = false;
          let tracked120s = false;

          setInterval(function() {
            const timeSpent = Math.floor((Date.now() - startTime) / 1000);

            if (timeSpent >= 30 && !tracked30s && typeof gtag !== 'undefined') {
              tracked30s = true;
              gtag('event', 'blog_reading_time', {
                event_category: 'engagement',
                event_label: '30_seconds',
                value: 30
              });
            }

            if (timeSpent >= 60 && !tracked60s && typeof gtag !== 'undefined') {
              tracked60s = true;
              gtag('event', 'blog_reading_time', {
                event_category: 'engagement',
                event_label: '60_seconds',
                value: 60
              });
            }

            if (timeSpent >= 120 && !tracked120s && typeof gtag !== 'undefined') {
              tracked120s = true;
              gtag('event', 'blog_reading_time', {
                event_category: 'engagement',
                event_label: '120_seconds',
                value: 120
              });
            }
          }, 10000); // Check every 10 seconds
        }

        // Track Scroll Depth
        let scrollTracked = {
          25: false,
          50: false,
          75: false,
          100: false
        };

        window.addEventListener('scroll', function() {
          const scrollPercent = Math.round((window.scrollY / (document.documentElement.scrollHeight - window.innerHeight)) * 100);

          Object.keys(scrollTracked).forEach(threshold => {
            if (scrollPercent >= parseInt(threshold) && !scrollTracked[threshold] && typeof gtag !== 'undefined') {
              scrollTracked[threshold] = true;
              gtag('event', 'scroll_depth', {
                event_category: 'engagement',
                event_label: `${threshold}_percent`,
                value: parseInt(threshold)
              });
            }
          });
        });

        // Track Outbound Links
        const externalLinks = document.querySelectorAll('a[href^="http"]:not([href*="ingheng-credit.vercel.app"])');
        externalLinks.forEach(link => {
          link.addEventListener('click', function() {
            if (typeof gtag !== 'undefined') {
              gtag('event', 'outbound_link_click', {
                event_category: 'engagement',
                event_label: this.getAttribute('href'),
                value: 1
              });
            }
          });
        });

        // Track Language Switcher
        const langSwitchers = document.querySelectorAll('[data-language-switcher]');
        langSwitchers.forEach(switcher => {
          switcher.addEventListener('click', function() {
            const targetLang = this.getAttribute('data-lang') || 'unknown';
            if (typeof gtag !== 'undefined') {
              gtag('event', 'language_change', {
                event_category: 'engagement',
                event_label: targetLang,
                value: 1
              });
            }
          });
        });
      });
    </script>
  </>
)}

{!isProduction && (
  <script>
    console.log('Google Analytics disabled in development mode');
  </script>
)}

{!GA_ID && isProduction && (
  <script>
    console.warn('Google Analytics ID not found. Please set PUBLIC_GA_ID in .env file');
  </script>
)}

<!--
  Setup Instructions:

  1. Create a .env file in the root directory
  2. Add: PUBLIC_GA_ID=G-XXXXXXXXXX
  3. Replace G-XXXXXXXXXX with your actual GA4 Measurement ID
  4. Add .env to .gitignore to keep credentials secure

  5. Add this component to your BaseLayout.astro:
     import GoogleAnalytics from '@/components/GoogleAnalytics.astro';

     <head>
       <GoogleAnalytics />
     </head>

  6. For cookie consent integration:
     - Modify cookieConsentGiven variable
     - Integrate with a cookie consent banner
     - Store user preference in localStorage/sessionStorage

  7. Verify installation:
     - Visit Google Analytics 4 dashboard
     - Check Realtime reports
     - Verify events are being tracked

  Custom Events Tracked:
  - whatsapp_click: WhatsApp button clicks
  - phone_call_click: Phone number clicks
  - email_click: Email address clicks
  - form_submission: Form submissions
  - equipment_view: Equipment page views
  - blog_reading_time: Blog engagement (30s, 60s, 120s)
  - scroll_depth: Scroll tracking (25%, 50%, 75%, 100%)
  - outbound_link_click: External link clicks
  - language_change: Language switcher usage
-->
